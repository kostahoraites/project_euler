#=
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=#

fibs = [1, 2]
lastfib = 1
sum_evens = 2

# DYNAMIC PROGRAMMING: for the fibonnacci sequence, recursion is slow
# better to just implement the sequence as a list, as below

counter = 3

while lastfib <= 4e6
   global lastfib = fibs[counter-1] + fibs[counter-2]
   if lastfib % 2 == 0
    global sum_evens += lastfib
   end
   push!(fibs,lastfib)
   global counter+=1
end

print("The sum of the even Fibonacci number <4e6 is: $sum_evens \n")

