#=

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

=#


# approach: for each triangle number T= n * (n+1)/2, find the prime factorization (a Multiset, since there can be repeats)
# given the prime factorization, there is a simple formula to get the number of factors:
#  product(M_p + 1)
# where M_p is the multiplicity of each unique prime p in the number T
# see divisors.jl for more explanation

include("utils/divisors.jl")

function triangle(n::Int)
 return Int(n * (n+1) / 2)
end

n = 1
while num_divisors(triangle(n)) <= 500
 global n+=1
end

print(triangle(n), '\n')







